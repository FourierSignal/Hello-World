Using the pyenv-installer
------------------------------
 curl https://pyenv.run | bash
 
 Load pyenv automatically by adding
the following to ~/.bashrc:

export PATH="$HOME/.pyenv/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
exec "$SHELL" # Or just restart your terminal



 pyenv commands
 
 pyenv shims --help
 

pyenv install --list | grep
pyenv install -v 3.10.0
pyenv install -v 3.9.0

ls ~/.pyenv/versions/

rm -rf ~/.pyenv/versions/2.7.15  or pyenv uninstall 2.7.15  --- will remove a version
 

pyenv versions
python -V

which python
/home/realpython/.pyenv/shims/python

pyenv which python
/usr/bin/python







pyenv versions


pyenv version


pyenv which pip
The which command is helpful for determining the full path to a system executable. 
Because pyenv works by using shims, this command allows you to see the full path to the executable pyenv is running. 
For example, if you wanted to see where pip is installed, you could run this:  pyenv which pip



pyenv global 3.6.8    ---  This command sets the ~/.pyenv/version to 3.6.8
pyenv global 3.6.8
$ pyenv versions
  system
  2.7.15
* 3.6.8 (set by /home/realpython/.pyenv/version)
  3.8-dev
$cat ~/.pyenv/version
3.6.8



 pyenv local 2.7.15    ------ This command creates a .python-version file in your current directory. 
 pyenv local 2.7.15
$ pyenv versions
  system
* 2.7.15 (set by /home/realpython/.python-version)
  3.6.8
  3.8-dev
$ ls -a
.  ..  .python-version
$ cat .python-version
2.7.15


 pyenv shell 3.8-dev     -------This command activates the version specified by setting the PYENV_VERSION environment variable
 
 pyenv shell 3.8-dev
$ pyenv versions
  system
  2.7.15
  3.6.8
* 3.8-dev (set by PYENV_VERSION environment variable)

echo $PYENV_VERSION
3.8-dev




pyenv virtualenv <python_version> <environment_name>

A good practice is to name your environments the same name as your project. 

mkdir myproject
pyenv virtualenv 3.6.8 myproject
pyenv local myproject

 here for pyenv local, instead of specifying a Python version, you specify an environment. 
 This creates a .python-version file in your current working directory 
 and because you ran eval "$(pyenv virtualenv-init -)" in your environment, the environment will automatically be activated
 
 pyenv which python
 /home/realpython/.pyenv/versions/myproject/bin/python
 If you look at any executable this environment provides, you will see the same thing. Take, for example, pip:
 pyenv which pip
/home/realpython/.pyenv/versions/myproject/bin/pip



If you did not configure eval "$(pyenv virtualenv-init -)" to run in your shell, you can manually activate/deactivate your Python versions with this:
$ pyenv activate <environment_name>
$ pyenv deactivate
The above is what pyenv-virtualenv is doing when it enters or exits a directory with a .python-version file in it.



creating virual environments
------------------------------
pyenv virtualenv 3.8.0  lpf
pyenv virtualenv 3.10.0 hpf


cd ~/Download/workspace_python/Audio_sp/hpf
pyenv local hpf


sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ pyenv versions
* system (set by /home/sudheer/.python-version)
  3.10.0
  3.10.0/envs/hpf
  3.8.0
  3.8.0/envs/lpf
  hpf
  lpf
sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ 

sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ cd lpf
(lpf) sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp/lpf$ pyenv versions
  system
  3.10.0
  3.10.0/envs/hpf
  3.8.0
  3.8.0/envs/lpf
  hpf
* lpf (set by /home/sudheer/Downloads/workspace_python/Audio_sp/lpf/.python-version)
(lpf) sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp/lpf$ cd ..
sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ 


sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ cd hpf
(hpf) sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp/hpf$ pyenv versions
  system
  3.10.0
  3.10.0/envs/hpf
  3.8.0
  3.8.0/envs/lpf
* hpf (set by /home/sudheer/Downloads/workspace_python/Audio_sp/hpf/.python-version)
  lpf
(hpf) sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp/hpf$ 



sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ pyenv install 3.10.4
Downloading Python-3.10.4.tar.xz...
-> https://www.python.org/ftp/python/3.10.4/Python-3.10.4.tar.xz
Installing Python-3.10.4...
Installed Python-3.10.4 to /home/sudheer/.pyenv/versions/3.10.4

sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ pyenv versions
* system (set by /home/sudheer/.python-version)
  3.10.0
  3.10.0/envs/hpf
  3.10.4
  3.8.0
  3.8.0/envs/lpf
  hpf
  lpf
sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ 


sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ pyenv virtualenv 3.8.0  lpf_aliasing
Looking in links: /tmp/tmpah615ooy
Requirement already satisfied: setuptools in /home/sudheer/.pyenv/versions/3.8.0/envs/lpf_aliasing/lib/python3.8/site-packages (41.2.0)
Requirement already satisfied: pip in /home/sudheer/.pyenv/versions/3.8.0/envs/lpf_aliasing/lib/python3.8/site-packages (19.2.3)
sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ 
sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ pyenv versions
* system (set by /home/sudheer/.python-version)
  3.10.0
  3.10.0/envs/hpf
  3.10.4
  3.8.0
  3.8.0/envs/lpf
  3.8.0/envs/lpf_aliasing
  hpf
  lpf
  lpf_aliasing
sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ 




sudheer@sudheer-OptiPlex-5060:~$ pyenv virtualenv 3.10.4  hpf_aliasing
sudheer@sudheer-OptiPlex-5060:~$ pyenv versions
* system (set by /home/sudheer/.python-version)
  3.10.0
  3.10.0/envs/hpf
  3.10.4
  3.10.4/envs/hpf_aliasing
  3.8.0
  3.8.0/envs/lpf
  3.8.0/envs/lpf_aliasing
  hpf
  hpf_aliasing
  lpf
  lpf_aliasing
  
  
  
  sudheer@sudheer-OptiPlex-5060:~$ cd ~/Downloads/workspace_python/Audio_sp/
  
  sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ mkdir hpf_aliasing
sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ cd hpf_aliasing/
sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp/hpf_aliasing$ ls -a
.  ..
sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp/hpf_aliasing$ pyenv local hpf_aliasing
sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp/hpf_aliasing$ ls -a
.  ..  .python-version
sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp/hpf_aliasing$ cat .python-version 
hpf_aliasingsudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp/hpf_aliasing$ cd ..
sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ cd hpf
hpf/          hpf_aliasing/ 
sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ cd hpf_aliasing/
sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp/hpf_aliasing$ 

sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp/hpf_aliasing$ pyenv activate hpf_aliasing
pyenv-virtualenv: prompt changing will be removed from future release. configure `export PYENV_VIRTUALENV_DISABLE_PROMPT=1' to simulate the behavior.
(hpf_aliasing) sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp/hpf_aliasing$ 

(hpf_aliasing) sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp/hpf_aliasing$ 
(hpf_aliasing) sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp/hpf_aliasing$ cd ..
(hpf_aliasing) sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ 
(hpf_aliasing) sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ 
(hpf_aliasing) sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ cd hpf_aliasing/
(hpf_aliasing) sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp/hpf_aliasing$ cd ..
(hpf_aliasing) sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ 

(hpf_aliasing) sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ pyenv deactivate 
sudheer@sudheer-OptiPlex-5060:~/Downloads/workspace_python/Audio_sp$ 



If you did not configure eval "$(pyenv virtualenv-init -)" to run in your shell, you need not  manually activate/deactivate your Python versions like above
The above is what pyenv-virtualenv is doing when it enters or exits a directory with a .python-version file in it.








  
  

