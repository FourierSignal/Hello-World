

Lists:

if __name__ == '__main__':
    N = int(raw_input())
    Integer_list=list()
    for i in range(1,N):
        command = raw_input().split()
        #print(command)
        if command[0]=="insert":
            Integer_list.insert(int(command[1]),int(command[2]))
        elif command[0]=="print":
            print Integer_list       
        elif command[0]=="remove":
            Integer_list.remove(int(command[1]))
        elif command[0]=="append":
            Integer_list.append(int(command[1]))        
        elif command[0]=="sort":
            Integer_list.sort()
        elif command[0]=="pop":
            Integer_list.pop()
        elif command[0]=="reverse":
            Integer_list.reverse()
            #print(Integer_list)
            

Tuples:

if __name__ == '__main__':
    n = int(raw_input())
    integer_list = map(int, raw_input().split())
    #print(integer_list)
    tup1=tuple(integer_list)
    #h=hash(tup1)
    print(hash(tup1))
    #print(hash(integer_list))
    
    
    
#print second largest in list    
    if __name__ == '__main__':
    n = int(raw_input())
    arr = map(int, raw_input().split())
    '''
    set1=set(arr)
    #print(set1)
    arr2=list(set1)
    arr2.sort()
    #print(arr2)
    print(arr2[len(arr2)-2])
    '''    
    print  max(list(filter(lambda i: i!=max(arr),arr)))  

    
    
#print student name Alphabetically who secured 2nd minimum score
students_list=[]
for _ in range(int(raw_input())):
    name = raw_input()
    score = float(raw_input())
    students_list.append([name,score])

#print(students_list)
score_list=[row[1] for row in students_list]
#print(score_list)
min_list=[]
for i in students_list:
    if i[1]!=min(score_list):
        min_list.append([i[0],i[1]])
#print(min_list)
min_list.sort(key= lambda x: x[1])
#print(min_list)

sec_low=min_list[0][1]
min_list.sort(key= lambda x: x[0])
#print(min_list)
for i in min_list:
    if i[1]==sec_low:
        print(i[0])



#LEAP YEAR CHECK

def is_leap(year):
    leap = False
# Write your logic here
#A leap year is exactly divisible by 4 except for century years (years ending with 00).
#But The century year is a leap year only if it is perfectly divisible by 400.

#for Every 4 years --> one leap year
#century year can not be leap year unleass it it is 400th century year

#most of times century year can not be leap year
#But For Every four hundred years--> century year is leap year



#divisible by 4 and also century year ; check if divisible by 400 -->  leap
#divisible by 4 and also century year ; check if not divisible by 400--> not leap
#divisible by 4 and also not century year ; no need to check with 400 --> leap
#not divisible by 4 ; no need to check with 100 and 400 --> not leap

   if year%4==0 :
        if year%100==0 :
            if year%400==0 :
                leap=True
            else:
                leap=False
        else:
            leap=True
    else:
        leap=False
        
    return leap



#print formatting:
from __future__ import print_function
#import sys
if __name__ == '__main__':
    n = int(raw_input())
Int_list=[]
for i in range(1,n+1):
    Int_list.append(i)
print(*Int_list,sep='',end='\n');
#print(*Int_list,sep='',end='\n',file=sys.stdout);


